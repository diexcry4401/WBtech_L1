package main

/*
Разработать программу нахождения расстояния между двумя точками,
которые представлены в виде структуры Point с инкапсулированными параметрами x,y и конструктором.
*/
import (
	"fmt"
	"math"
)

// Определение структуры Point с полями x и y
type Point struct {
	x, y float64 // Поля структуры являются закрытыми (инкапсуляция) благодаря использованию строчных букв
}

func main() {
	// Создание двух точек с помощью конструктора newPoint
	point1 := newPoint(3, 4)
	point2 := newPoint(9, 6)

	// Вычисление расстояния между двумя точками и вывод результата
	fmt.Println(RangeBetweenPoints(point1, point2))
}

// Конструктор для создания новой точки
// newPoint принимает два значения типа float64 и возвращает указатель на структуру Point
func newPoint(a, b float64) *Point {
	return &Point{x: a, y: b} // Возвращаем указатель на новую структуру Point с заданными координатами
}

// Функция для вычисления расстояния между двумя точками
// RangeBetweenPoints принимает два указателя на структуры Point и возвращает расстояние между ними как значение типа float64
func RangeBetweenPoints(point1 *Point, point2 *Point) float64 {
	// Вычисление расстояния по формуле расстояния между двумя точками в пространстве
	return math.Sqrt(math.Pow(point2.x-point1.x, 2) + math.Pow(point2.y-point1.y, 2)) // формула вычисления AB = √(xb - xa)2 + (yb - ya)2
}
